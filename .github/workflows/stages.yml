name: stages

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]




jobs:
    

  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name : Install Dependencies
      run: npm install

    - name: Build
      run: npm run build --if-present -- --prod





  unit-testing:
    #needs: build
    
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name : Install Dependencies
      run: npm install


    - name: Test
      run: npm run test-headless

  
  lint:
    #needs: build
    
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name : Install Dependencies
      run: npm install

    - name: Lint
      run: npm run lint


  #build-and-push-docker-image:
  #  runs-on: ubuntu-latest
#
  #  steps:
  #  - uses: actions/checkout@v2
  #    name: Check out code
#
  #  - name: build docker image
  #    run: docker build -t khalednagah/khaleddockerrepo2
  #  - name:
  build-push-docker-image: 
  
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      name: Check out code

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
   
    #- name: Build and push
     # run: docker build -t khaleddockerrepo3 .
      
   #Building the docker image and pushing it to DockerHub 
    - name: Get Time
      id: time
      uses: nanzm/get-time-action@v1.1
      with:
        timeZone: 8
        format: 'YYYY-MM-DD-HH-mm-ss'
    - name: Usage
      env:
        CURRENT_TIMESTAMP: "${{ steps.time.outputs.time }}"
      run: |
        echo $TIME
          
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: khalednagah/khaleddockerrepo:${{ env.CURRENT_TIMESTAMP}}
        
    #Enter the VM
    - name: executing remote ssh commands using ssh key
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.HOST_IP }}
        username: ${{ secrets.HOST_USERNAME }}
        key: ${{ secrets.HOST_PRIVATE_KEY }}
        port: ${{ secrets.HOST_PORT }}
        script: | 
          docker kill $(docker ps -q)
          docker run -d -p 4200:4200 khalednagah/khaleddockerrepo:${{ env.CURRENT_TIMESTAMP}}
  #build-and-push-docker-image:
  #  runs-on: ubuntu-latest
  #  
  #  steps:
  #  - uses: actions/checkout@v2
  #    name: Check out code
#
#
#
  #  
  #  - uses: mr-smithers-excellent/docker-build-push@v5
  #    name: Build & push Docker image
  #    with:
  #      image: khalednagah/khaleddockerrepo2
  #      tags: v1, latest
  #      registry: docker.io
  #      username: ${{ secrets.DOCKER_USERNAME }}
  #      password: ${{ secrets.DOCKER_PASSWORD }}
